import streamlit as st
import sounddevice as sd
import queue
import json
import os
from vosk import Model, KaldiRecognizer

# Hindi model path
MODEL_PATH = "vosk-model-small-hi-0.22"

# Load Vosk model
@st.cache_resource
def load_model():
    return Model(MODEL_PATH)

model = load_model()

# Settings
sample_rate = 16000
q = queue.Queue()

# Audio callback
def callback(indata, frames, time, status):
    if status:
        st.warning(f"Recording error: {status}")
    q.put(bytes(indata))

# UI
st.title("üó£Ô∏è ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§∏‡•ç‡§™‡•Ä‡§ö-‡§ü‡•Ç-‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü")
st.markdown("üé§ **‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§´‡§º‡•ã‡§® ‡§∏‡•á ‡§¨‡•ã‡§≤‡§ø‡§è ‡§î‡§∞ ‡§®‡•Ä‡§ö‡•á ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§¶‡•á‡§ñ‡§ø‡§è‡•§**")

if st.button("üî¥ ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç"):
    st.info("üéôÔ∏è ‡§¨‡•ã‡§≤‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç... (Ctrl+C ‡§Ø‡§æ ‡§∏‡•ç‡§ü‡•â‡§™ ‡§¶‡§¨‡§æ‡§è‡§Ç ‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è)")
    rec = KaldiRecognizer(model, sample_rate)

    try:
        with sd.RawInputStream(samplerate=sample_rate, blocksize=8000, dtype='int16',
                               channels=1, callback=callback):
            stframe = st.empty()
            full_text = ""
            while True:
                data = q.get()
                if rec.AcceptWaveform(data):
                    result = json.loads(rec.Result())
                    text = result.get("text", "")
                    if text.strip():
                        full_text += text + " "
                        stframe.markdown(f"üìù **‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü:** {full_text}")
                else:
                    partial = json.loads(rec.PartialResult()).get("partial", "")
                    if partial:
                        stframe.markdown(f"‚åõ **‡§Ü‡§Ç‡§∂‡§ø‡§ï:** {partial}")
    except KeyboardInterrupt:
        st.success("‚úÖ ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°‡§ø‡§Ç‡§ó ‡§∞‡•ã‡§ï ‡§¶‡•Ä ‡§ó‡§à‡•§")
    except Exception as e:
        st.error(f"‚ùå Error: {e}")
